# namespace = dwarven_tolerance_events

# country_event = {
	# id = dwarven_tolerance_events.1
	# title = dwarven_tolerance_events.1.t
	# desc = dwarven_tolerance_events.1.d
	# picture = COURT_eventPicture
	
	# is_triggered_only = yes
	
	# trigger = {
		# NOT = { culture_group = dwarven }
		# any_owned_province = {
			# NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
			# NOT = { has_province_modifier = dwarven_poor_mines_prov }
			# has_dwarven_minority_trigger = yes
			# OR = {
				# has_terrain = mountain
				# trade_goods = iron
				# trade_goods = copper
				# trade_goods = gold
				# trade_goods = coal
			# }
		# }
	# }
	
	# mean_time_to_happen = {
		# days = 1
	# }
	
	# immediate = {
		# hidden_effect = {
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
					# NOT = { has_province_modifier = dwarven_poor_mines_prov }
					# has_dwarven_minority_trigger = yes
					# OR = {
						# has_terrain = mountain
						# trade_goods = iron
						# trade_goods = copper
						# trade_goods = gold
						# trade_goods = coal
					# }
				# }
				# save_event_target_as = dwarven_poor_mining_province
			# }
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
					# NOT = { has_province_modifier = dwarven_poor_mines_prov }
					# has_dwarven_minority_trigger = yes
					# has_terrain = mountain
					# OR = {
						# trade_goods = iron
						# trade_goods = copper
						# trade_goods = gold
						# trade_goods = coal
					# }
				# }
				# save_event_target_as = dwarven_poor_mining_province
			# }
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
					# NOT = { has_province_modifier = dwarven_poor_mines_prov }
					# has_dwarven_minority_trigger = yes
					# has_terrain = mountain
					# base_production = 3
					# OR = {
						# trade_goods = iron
						# trade_goods = copper
						# trade_goods = gold
						# trade_goods = coal
					# }
				# }
				# save_event_target_as = dwarven_poor_mining_province
			# }
		# }
	# }
	
	# option = {	# Send them back to the mines
		# name = dwarven_tolerance_events.1.a
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 0.5
				# ai_equal_to_wanted_tolerance_dwarven = yes
			# }
			# modifier = {
				# factor = 0.1
				# ai_lower_than_wanted_tolerance_dwarven = yes
			# }
		# }
		# small_decrease_of_dwarven_tolerance_effect = yes
		# event_target:dwarven_poor_mining_province = {
			# add_province_modifier = {
				# name = dwarven_forced_back_to_poor_mines_prov
				# duration = 3650
			# }
		# }
	# }
	
	# option = {	# Divert resources to help their efforts
		# name = dwarven_tolerance_events.1.b
		# ai_chance = {
			# factor = 50
		# }
		# add_adm_power = -25
		# if = {
			# limit = { NOT = { monthly_income = 25 } }
			# add_years_of_income = -0.33
		# }
		# if = {
			# limit = { monthly_income = 25 }
			# add_treasury = -100
		# }
		# event_target:dwarven_poor_mining_province = {
			# add_province_modifier = {
				# name = dwarven_poor_mines_prov
				# duration = 1825
			# }
		# }
	# }
	
	# option = {	# Let's give them new land
		# name = dwarven_tolerance_events.1.c
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 0.5
				# ai_equal_to_wanted_tolerance_dwarven = yes
			# }
			# modifier = {
				# factor = 0.1
				# ai_higher_than_wanted_tolerance_dwarven = yes
			# }
		# }
		# add_adm_power = -50
		# small_increase_of_dwarven_tolerance_effect = yes
		# event_target:dwarven_poor_mining_province = {
			# add_local_autonomy = 10
		# }
	# }
# }

# country_event = {
	# id = dwarven_tolerance_events.2
	# title = dwarven_tolerance_events.2.t
	# desc = dwarven_tolerance_events.2.d
	# picture = FORT_eventPicture
	
	# is_triggered_only = yes
	
	# trigger = {
		# NOT = { culture_group = dwarven }
		# any_owned_province = {
			# NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
			# NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
			# NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
			# has_dwarven_minority_trigger = yes
		# }
	# }
	
	# mean_time_to_happen = {
		# days = 1
	# }
	
	# immediate = {
		# hidden_effect = {
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					# has_dwarven_minority_trigger = yes
				# }
				# save_event_target_as = dwarven_stronghold_province
			# }
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					# has_dwarven_minority_trigger = yes
					# is_capital = no
					# OR = {
						# has_terrain = mountain
						# fort_level = 1
					# }
				# }
				# save_event_target_as = dwarven_stronghold_province
			# }
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					# has_dwarven_minority_trigger = yes
					# is_capital = no
					# has_terrain = mountain
					# fort_level = 1
				# }
				# save_event_target_as = dwarven_stronghold_province
			# }
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					# NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					# has_dwarven_minority_trigger = yes
					# is_capital = no
					# any_neighbor_province = { NOT = { owned_by = ROOT } }
					# has_terrain = mountain
					# fort_level = 1
				# }
				# save_event_target_as = dwarven_stronghold_province
			# }
		# }
	# }
	
	# option = {	# They can have the land for now
		# name = dwarven_tolerance_events.2.a
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 0.8
				# NOT = { prestige = 0 }
			# }
			# modifier = {
				# factor = 0.5
				# ai_equal_to_wanted_tolerance_dwarven = yes
			# }
			# modifier = {
				# factor = 0.1
				# ai_higher_than_wanted_tolerance_dwarven = yes
			# }
		# }
		# add_prestige = -10
		# small_increase_of_dwarven_tolerance_effect = yes
		# event_target:dwarven_stronghold_province = {
			# add_local_autonomy = 5
			# add_province_modifier = {
				# name = dwarven_independent_stronghold_prov
				# duration = 3650
			# }
		# }
	# }
	
	# option = {	# We could simply buy back the land
		# name = dwarven_tolerance_events.2.b
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 0.8
				# NOT = { years_of_income = 0.2 }
			# }
			# modifier = {
				# factor = 0.8
				# NOT = { years_of_income = 0.4 }
			# }
		# }
		# add_years_of_income = -0.2
	# }
	
	# option = {	# Send in the military, that land is rightfully ours
		# name = dwarven_tolerance_events.2.c
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 0.8
				# NOT = { manpower_percentage = 0.33 }
			# }
			# modifier = {
				# factor = 0.5
				# ai_equal_to_wanted_tolerance_dwarven = yes
			# }
			# modifier = {
				# factor = 0.1
				# ai_lower_than_wanted_tolerance_dwarven = yes
			# }
		# }
		# add_mil_power = -50
		# if = {
			# limit = {
				# max_manpower = 20
			# }
			# add_manpower = -1
		# }
		# if = {
			# limit = {
				# NOT = { max_manpower = 20 }
			# }
			# add_yearly_manpower = -0.5
		# }
		# small_decrease_of_dwarven_tolerance_effect = yes
		# event_target:dwarven_stronghold_province = {
			# add_province_modifier = {
				# name = dwarven_independent_stronghold_attacked_prov
				# duration = 1825
			# }
		# }
	# }
	
	# option = {	# This is an opportunity in disguise
		# name = dwarven_tolerance_events.2.e
		# trigger = { ruler_has_personality = entrepreneur_personality }
		# required_personality = entrepreneur_personality
		# highlight = yes
		# ai_chance = {
			# factor = 100
			# modifier = {
				# factor = 0.8
				# NOT = { years_of_income = 0.1 }
			# }
			# modifier = {
				# factor = 0.8
				# NOT = { years_of_income = 0.2 }
			# }
			# modifier = {
				# factor = 0.5
				# ai_equal_to_wanted_tolerance_dwarven = yes
			# }
			# modifier = {
				# factor = 0.1
				# ai_higher_than_wanted_tolerance_dwarven = yes
			# }
		# }
		# custom_tooltip = dwarven_tolerance_events_2_e_tooltip
		# add_years_of_income = -0.1
		# small_increase_of_dwarven_tolerance_effect = yes
		# event_target:dwarven_stronghold_province = {
			# add_local_autonomy = 2.5
			# add_province_modifier = {
				# name = dwarven_independent_stronghold_deal_prov
				# duration = 3650
			# }
		# }
	# }
# }

# country_event = {
	# id = dwarven_tolerance_events.3
	# title = dwarven_tolerance_events.3.t
	# desc = dwarven_tolerance_events.3.d
	# picture = MERCHANTS_TALKING_eventPicture
	
	# is_triggered_only = yes
	
	# trigger = {
		# NOT = { culture_group = dwarven }
		# any_owned_province = {
			# NOT = { has_province_modifier = dwarven_guilds_upset }
			# NOT = { has_province_modifier = dwarven_guilds_given_privileges }
			# has_dwarven_minority_trigger = yes
		# }
	# }
	
	# mean_time_to_happen = {
		# days = 1
	# }
	
	# immediate = {
		# hidden_effect = {
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_guilds_upset }
					# NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					# has_dwarven_minority_trigger = yes
				# }
				# save_event_target_as = dwarven_guild_province
			# }
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_guilds_upset }
					# NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					# has_dwarven_minority_trigger = yes
					# province_trade_power = 5
				# }
				# save_event_target_as = dwarven_guild_province
			# }
			# random_owned_province = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_guilds_upset }
					# NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					# has_dwarven_minority_trigger = yes
					# province_trade_power = 10
				# }
				# save_event_target_as = dwarven_guild_province
			# }
		# }
	# }
	
	# option = {	# Their competence should be rewarded
		# name = dwarven_tolerance_events.3.a
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 0.8
				# NOT = { prestige = 0 }
			# }
			# modifier = {
				# factor = 0.5
				# has_dlc = "The Cossacks"
				# has_estate = estate_burghers
				# NOT = {
					# estate_loyalty = {
						# estate = estate_burghers
						# loyalty = 40
					# }
				# }
			# }
			# modifier = {
				# factor = 0.5
				# ai_equal_to_wanted_tolerance_dwarven = yes
			# }
			# modifier = {
				# factor = 0.1
				# ai_higher_than_wanted_tolerance_dwarven = yes
			# }
		# }
		# add_prestige = -5
		# small_increase_of_dwarven_tolerance_effect = yes
		# reduce_estate_burghers_loyalty_effect = yes
		# event_target:dwarven_guild_province = {
			# area = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_guilds_upset }
					# NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					# has_dwarven_minority_trigger = yes
				# }
				# add_province_modifier = {
					# name = dwarven_guilds_given_privileges
					# duration = 3650
				# }
			# }
		# }
	# }
	
	# option = {	# We sadly cannot agree to this
		# name = dwarven_tolerance_events.3.b
		# ai_chance = {
			# factor = 50
		# }
		# event_target:dwarven_guild_province = {
			# area = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_guilds_upset }
					# NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					# has_dwarven_minority_trigger = yes
				# }
				# add_province_modifier = {
					# name = dwarven_guilds_upset
					# duration = 1825
				# }
			# }
		# }
	# }
	
	# option = {	# Outrageous! No dwarf deserve such privileges
		# name = dwarven_tolerance_events.3.c
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 0.5
				# ai_equal_to_wanted_tolerance_dwarven = yes
			# }
			# modifier = {
				# factor = 0.1
				# ai_lower_than_wanted_tolerance_dwarven = yes
			# }
		# }
		# add_prestige = 5
		# small_decrease_of_dwarven_tolerance_effect = yes
		# event_target:dwarven_guild_province = {
			# area = {
				# limit = {
					# NOT = { has_province_modifier = dwarven_guilds_upset }
					# NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					# has_dwarven_minority_trigger = yes
				# }
				# add_province_modifier = {
					# name = dwarven_guilds_upset
					# duration = 3650
				# }
			# }
		# }
	# }
# }